name: Update README with ABOUT.md, INSTALL.md, CONTRIBUTING.md and badges

on:
  workflow_call:
    inputs:
      template_file:
        description: 'Path to README template file'
        required: true
        type: string
      output_file:
        description: 'Path to generated README'
        required: true
        type: string
      package_name:
        description: 'Name of the Julia package (e.g., OptimalControl)'
        required: true
        type: string
      repo_name:
        description: 'Repository name (e.g., OptimalControl.jl)'
        required: true
        type: string
      citation_badge:
        description: 'Markdown badge for Citation/DOI'
        required: false
        type: string
      assignee:
        description: 'GitHub username to assign the PR to. Leave empty for no assignee.'
        required: false
        type: string

jobs:
  generate-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: 🛎 Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 🌐 Fetch central files
        run: |
          echo "⬇️ Downloading ABOUT.md, INSTALL.md, CONTRIBUTING.md..."
          curl -sL "https://raw.githubusercontent.com/control-toolbox/.github/main/ABOUT.md" -o ABOUT.md
          curl -sL "https://raw.githubusercontent.com/control-toolbox/.github/main/INSTALL.md" -o INSTALL.md
          curl -sL "https://raw.githubusercontent.com/control-toolbox/.github/main/CONTRIBUTING.md" -o CONTRIBUTING.md
          echo "✅ Files downloaded."

      - name: 📝 Generate README with placeholders and badges
        run: |
          echo "🔧 Replacing placeholders and inserting content..."
          PACKAGE="${{ inputs.package_name }}"
          REPO="${{ inputs.repo_name }}"
          CITATION="${{ inputs.citation_badge }}"

          sed "s/{{PACKAGE}}/$PACKAGE/g" INSTALL.md > INSTALL.tmp.md
          sed "s/{{REPO}}/$REPO/g" CONTRIBUTING.md > CONTRIBUTING.tmp.md

          # replace CONTRIBUTING.md since we want to commit it if any changes
          cp CONTRIBUTING.tmp.md CONTRIBUTING.md
          
          # Insert ABOUT.md
          sed '/<!-- INCLUDE_ABOUT -->/ {
            r ABOUT.md
            d
          }' "${{ inputs.template_file }}" > README.tmp1.md

          # Insert INSTALL.md
          sed '/<!-- INCLUDE_INSTALL -->/ {
            r INSTALL.tmp.md
            d
          }' README.tmp1.md > README.tmp2.md

          # Insert CONTRIBUTING.md
          sed '/<!-- INCLUDE_CONTRIBUTING -->/ {
            r CONTRIBUTING.tmp.md
            d
          }' README.tmp2.md > README.tmp3.md

          BADGES_LINE=$(grep '<!-- INCLUDE_BADGES:' README.tmp3.md || echo "")
          if [ -n "$BADGES_LINE" ]; then
            BADGES_LIST=$(echo $BADGES_LINE | sed 's/.*: \(.*\) -->/\1/' | sed 's/,/ /g')
            {
              echo "| **Category** | **Badge** |"
              echo "|-----------------------|-----------|"
              for BADGE in $BADGES_LIST; do
                case $BADGE in
                  Documentation)
                    echo "| **Documentation** | [![Stable Docs](https://img.shields.io/badge/docs-stable-blue.svg)](https://control-toolbox.org/$REPO/stable/) [![Dev Docs](https://img.shields.io/badge/docs-dev-8A2BE2.svg)](https://control-toolbox.org/$REPO/dev/) |"
                    ;;
                  CI)
                    echo "| **CI / Build** | [![Build Status](https://github.com/control-toolbox/$REPO/actions/workflows/CI.yml/badge.svg?branch=main)](https://github.com/control-toolbox/$REPO/actions/workflows/CI.yml?query=branch%3Amain) |"
                    ;;
                  Coverage)
                    echo "| **Test Coverage** | [![Coverage](https://codecov.io/gh/control-toolbox/$REPO/branch/main/graph/badge.svg)](https://codecov.io/gh/control-toolbox/$REPO) |"
                    ;;
                  PackageEvaluation)
                    echo "| **Package Evaluation** | [![PkgEval](https://img.shields.io/badge/Julia-package-purple)](https://juliahub.com/ui/Packages/General/$PACKAGE) [![Dependencies](https://juliahub.com/docs/General/$PACKAGE/stable/deps.svg)](https://juliahub.com/ui/Packages/General/$PACKAGE?t=2) |"
                    ;;
                  Release)
                    echo "| **Release / Version** | [![Release](https://img.shields.io/github/v/release/control-toolbox/$REPO.svg)](https://github.com/control-toolbox/$REPO/releases) |"
                    ;;
                  Citation)
                    if [ -n "$CITATION" ]; then
                      echo "| **Citation** | $CITATION |"
                    fi
                    ;;
                  License)
                    echo "| **License** | [![License](https://img.shields.io/badge/License-MIT-yellow.svg)](https://github.com/control-toolbox/$REPO/blob/master/LICENSE) |"
                    ;;
                  CodeStyle)
                    echo "| **Code Style / Quality** | [![Code Style: Blue](https://img.shields.io/badge/code%20style-blue-4495d1.svg)](https://github.com/JuliaDiff/BlueStyle) [![Aqua.jl](https://raw.githubusercontent.com/JuliaTesting/Aqua.jl/master/badge.svg)](https://github.com/JuliaTesting/Aqua.jl) |"
                    ;;
                  Downloads)
                    echo "| **Downloads** | [![Monthly](https://img.shields.io/badge/dynamic/json?url=http%3A%2F%2Fjuliapkgstats.com%2Fapi%2Fv1%2Fmonthly_downloads/$PACKAGE&query=total_requests&suffix=%2Fmonth&label=Monthly%20Downloads)](https://juliapkgstats.com/pkg/$PACKAGE) [![Total](https://img.shields.io/badge/dynamic/json?url=http%3A%2F%2Fjuliapkgstats.com%2Fapi%2Fv1%2Ftotal_downloads/$PACKAGE&query=total_requests&label=Total%20Downloads)](https://juliapkgstats.com/pkg/$PACKAGE) |"
                    ;;
                esac
              done
            } > badges.tmp.md

            sed "/<!-- INCLUDE_BADGES:/{
              r badges.tmp.md
              d
            }" README.tmp3.md > "${{ inputs.output_file }}"
            
            echo "✅ README generated with badges."
            rm -f ABOUT.md INSTALL.md INSTALL.tmp.md CONTRIBUTING.tmp.md README.tmp1.md README.tmp2.md README.tmp3.md badges.tmp.md
          else
            mv README.tmp3.md "${{ inputs.output_file }}"
            echo "✅ README generated (no badges)."
            rm -f ABOUT.md INSTALL.md INSTALL.tmp.md CONTRIBUTING.tmp.md README.tmp1.md README.tmp2.md README.tmp3.md
          fi

      - name: "🔍 Check for README or CONTRIBUTING changes"
        id: check
        run: |
          OUTPUT_FILE="${{ inputs.output_file }}"
          echo "🔎 Checking git-tracked changes for $OUTPUT_FILE and CONTRIBUTING.md..."

          # Vérifie si CONTRIBUTING.md existait dans le repo avant le workflow
          if ! git ls-files --error-unmatch CONTRIBUTING.md >/dev/null 2>&1; then
            echo "⚠️ CONTRIBUTING.md did not exist in the repo before. Will create PR."
            git add "$OUTPUT_FILE" CONTRIBUTING.md
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            # Ajoute les fichiers modifiés ou remplacés
            git add "$OUTPUT_FILE" CONTRIBUTING.md

            if git diff --cached --quiet; then
              echo "✅ No changes detected in README or CONTRIBUTING.md."
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "⚠️ Changes detected in README or CONTRIBUTING.md!"
              git diff --cached --name-only
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          fi

      - name: 📅 Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: 📨 Create Pull Request if changes detected
        if: steps.check.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "Update README (${{ steps.date.outputs.date }}) with latest ABOUT.md, INSTALL.md, CONTRIBUTING.md and badges"
          branch: update-readme-${{ steps.date.outputs.date }}
          delete-branch: true
          title: "Update README (${{ steps.date.outputs.date }}) with latest ABOUT.md, INSTALL.md, CONTRIBUTING.md and badges"
          body: |
            This PR updates the README with the latest version of ABOUT.md, INSTALL.md, CONTRIBUTING.md, and badges from the control-toolbox/.github repo.

            Generated on ${{ steps.date.outputs.date }}.
          assignees: ${{ inputs.assignee }}

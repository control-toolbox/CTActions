name: Update README with ABOUT.md, INSTALL.md, CONTRIBUTING.md and badges

on:
  workflow_call:
    inputs:
      template_file:
        description: 'Path to README template file'
        required: true
        type: string
      output_file:
        description: 'Path to generated README'
        required: true
        type: string
      package_name:
        description: 'Name of the Julia package (e.g., OptimalControl)'
        required: true
        type: string
      repo_name:
        description: 'Repository name (e.g., OptimalControl.jl)'
        required: true
        type: string

jobs:
  generate-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch central files
        run: |
          curl -sL "https://raw.githubusercontent.com/control-toolbox/.github/main/ABOUT.md" -o ABOUT.md
          curl -sL "https://raw.githubusercontent.com/control-toolbox/.github/main/INSTALL.md" -o INSTALL.md
          curl -sL "https://raw.githubusercontent.com/control-toolbox/.github/main/CONTRIBUTING.md" -o CONTRIBUTING.md

      - name: Generate README with substituted placeholders and badges
        run: |
          PACKAGE="${{ inputs.package_name }}"
          REPO="${{ inputs.repo_name }}"

          # Replace placeholders in INSTALL.md and CONTRIBUTING.md
          sed "s/{{PACKAGE}}/$PACKAGE/g" INSTALL.md > INSTALL.tmp.md
          sed "s/{{REPO}}/$REPO/g" CONTRIBUTING.md > CONTRIBUTING.tmp.md

          # Insert ABOUT.md
          sed '/<!-- INCLUDE_ABOUT -->/ {
            r ABOUT.md
            d
          }' "${{ inputs.template_file }}" > README.tmp1.md

          # Insert INSTALL.md
          sed '/<!-- INCLUDE_INSTALL -->/ {
            r INSTALL.tmp.md
            d
          }' README.tmp1.md > README.tmp2.md

          # Insert CONTRIBUTING.md
          sed '/<!-- INCLUDE_CONTRIBUTING -->/ {
            r CONTRIBUTING.tmp.md
            d
          }' README.tmp2.md > README.tmp3.md

          # Handle badges
          BADGES_LINE=$(grep '<!-- INCLUDE_BADGES:' README.tmp3.md || echo "")
          if [ -n "$BADGES_LINE" ]; then
            BADGES_LIST=$(echo $BADGES_LINE | sed 's/.*: \(.*\) -->/\1/' | sed 's/,/ /g')
            {
              echo "| **Category** | **Badge** |"
              echo "|-----------------------|-----------|"
              for BADGE in $BADGES_LIST; do
                case $BADGE in
                  Documentation)
                    echo "| **Documentation** | [![Stable Docs](https://img.shields.io/badge/docs-stable-blue.svg)](https://control-toolbox.org/$REPO/stable/) [![Dev Docs](https://img.shields.io/badge/docs-dev-8A2BE2.svg)](https://control-toolbox.org/$REPO/dev/) |"
                    ;;
                  CI)
                    echo "| **CI / Build** | [![Build Status](https://github.com/control-toolbox/$REPO/actions/workflows/CI.yml/badge.svg?branch=main)](https://github.com/control-toolbox/$REPO/actions/workflows/CI.yml?query=branch%3Amain) |"
                    ;;
                  Coverage)
                    echo "| **Test Coverage** | [![Coverage](https://codecov.io/gh/control-toolbox/$REPO/branch/main/graph/badge.svg)](https://codecov.io/gh/control-toolbox/$REPO) |"
                    ;;
                  PackageEvaluation)
                    echo "| **Package Evaluation** | [![PkgEval](https://img.shields.io/badge/Julia-package-purple)](https://juliahub.com/ui/Packages/General/$PACKAGE) [![Dependencies](https://juliahub.com/docs/General/$PACKAGE/stable/deps.svg)](https://juliahub.com/ui/Packages/General/$PACKAGE?t=2) |"
                    ;;
                  Release)
                    echo "| **Release / Version** | [![Release](https://juliahub.com/docs/General/$PACKAGE/stable/version.svg)](https://github.com/control-toolbox/$REPO/releases) |"
                    ;;
                  Citation)
                    echo "| **Citation / DOI** | [![DOI](https://zenodo.org/badge/541187171.svg)](https://zenodo.org/doi/10.5281/zenodo.13336563) |"
                    ;;
                  License)
                    echo "| **License** | [![License](https://img.shields.io/badge/License-MIT-yellow.svg)](https://github.com/control-toolbox/$REPO/blob/master/LICENSE) |"
                    ;;
                  CodeStyle)
                    echo "| **Code Style / Quality** | [![Code Style: Blue](https://img.shields.io/badge/code%20style-blue-4495d1.svg)](https://github.com/JuliaDiff/BlueStyle) [![Aqua.jl](https://raw.githubusercontent.com/JuliaTesting/Aqua.jl/master/badge.svg)](https://github.com/JuliaTesting/Aqua.jl) |"
                    ;;
                  Downloads)
                    echo "| **Downloads** | [![Monthly](https://img.shields.io/badge/dynamic/json?url=http%3A%2F%2Fjuliapkgstats.com%2Fapi%2Fv1%2Fmonthly_downloads/$PACKAGE&query=total_requests&suffix=%2Fmonth&label=Monthly%20Downloads)](https://juliapkgstats.com/pkg/$PACKAGE) [![Total](https://img.shields.io/badge/dynamic/json?url=http%3A%2F%2Fjuliapkgstats.com%2Fapi%2Fv1%2Ftotal_downloads/$PACKAGE&query=total_requests&label=Total%20Downloads)](https://juliapkgstats.com/pkg/$PACKAGE) |"
                    ;;
                esac
              done
            } > badges.tmp.md

            # Replace placeholder with actual table
            sed "/<!-- INCLUDE_BADGES:/{
              r badges.tmp.md
              d
            }" README.tmp3.md > "${{ inputs.output_file }}"
            
            # Cleanup temporary files
            rm -f INSTALL.tmp.md CONTRIBUTING.tmp.md README.tmp1.md README.tmp2.md README.tmp3.md badges.tmp.md
          else
            mv README.tmp3.md "${{ inputs.output_file }}"
            rm -f INSTALL.tmp.md CONTRIBUTING.tmp.md README.tmp1.md README.tmp2.md README.tmp3.md
          fi

      - name: Stage README changes only
        run: git add "${{ inputs.output_file }}"

      - name: Commit changes if needed
        run: |
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          else
            git config --local user.name "github-actions[bot]"
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git commit -m "Update README with latest ABOUT.md, INSTALL.md, CONTRIBUTING.md and badges"
          fi

      - name: Push changes and create PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="update-readme-$(date +%s)"
          git push origin HEAD:$BRANCH
          gh pr create \
            --title "Update README with latest ABOUT.md, INSTALL.md, CONTRIBUTING.md and badges" \
            --body "This PR updates the README with the latest version of ABOUT.md, INSTALL.md, CONTRIBUTING.md, and badges from the control-toolbox/.github repo." \
            --base main \
            --head $BRANCH \
            --assignee ocots || echo "PR already exists or could not be created"
